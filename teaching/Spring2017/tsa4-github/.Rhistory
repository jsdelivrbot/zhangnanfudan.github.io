minP = min(PACF)
maxP = max(PACF)
U = 2/sqrt(num)
L = -U
minu = min(minA, minP, L) - 0.01
maxu = min(max(maxA + 0.1, maxP + 0.1), 1)
pdf(file="varveacf.pdf",width=7,height=4)
par(mfrow=c(2,1), mar=c(2,2,0,0)+.5, mgp=c(1.5,.6,0))
plot(LAG, ACF, type="h", xlab="LAG", ylim = c(minu, maxu), panel.first=grid(lty=1)); abline(h=0)
abline(h = c(L, U), col=4, lty=2)
plot(LAG, PACF, type="h", xlab="LAG",  ylim = c(minu, maxu) , panel.first=grid(lty=1)); abline(h=0)
abline(h = c(L, U), col=4, lty=2)
dev.off()
x=diff(log(varve))
r=acf(x, lag=1, plot=FALSE)$acf[-1]
rstart = (1-sqrt(1-4*(r^2)))/(2*r)    #example 3.29 (e2.27)
c(0) -> w
c() -> Sc
num = length(x)
th = seq(-.3,-.94,-.01)
for (p in 1:length(th)){
for (i in 2:num){w[i]=x[i]-th[p]*w[i-1]}
Sc[p] = sum(w^2)
}
par(mar=c(2,2.5,0,0)+.5, mgp=c(1.6,.6,0))
plot(th, Sc, type="l",ylab=expression(S[c](theta)), xlab=expression(theta),lwd=2, panel.first=grid(NA, NULL,lty=1))
c(0) -> w -> z
c() -> Sc -> Sz -> Szw
para = c()
niter = 15
para[1]=rstart
for (p in 1:niter){
for (i in 2:num){w[i]=x[i]-para[p]*w[i-1]
z[i]=w[i-1]-para[p]*z[i-1]
}
Sc[p] = sum(w^2)
Sz[p]=sum(z^2)
Szw[p]=sum(z*w)
para[p+1] = para[p] + Szw[p]/Sz[p]
}
abline(v=para[1:12], lty=2)
points(para[1:12], Sc[1:12], pch=16)
###############
pdf(file="gaussnewton.pdf",width=7,height=3.75)
x=diff(log(varve))
r=acf(x, lag=1, plot=FALSE)$acf[-1]
rstart = (1-sqrt(1-4*(r^2)))/(2*r)    #example 3.29 (e2.27)
c(0) -> w
c() -> Sc
num = length(x)
th = seq(-.3,-.94,-.01)
for (p in 1:length(th)){
for (i in 2:num){w[i]=x[i]-th[p]*w[i-1]}
Sc[p] = sum(w^2)
}
par(mar=c(2,2.5,0,0)+.5, mgp=c(1.6,.6,0))
plot(th, Sc, type="l",ylab=expression(S[c](theta)), xlab=expression(theta),lwd=2, panel.first=grid(NA, NULL,lty=1))
# estimation
c(0) -> w -> z
c() -> Sc -> Sz -> Szw
para = c()
niter = 15
para[1]=rstart
for (p in 1:niter){
for (i in 2:num){w[i]=x[i]-para[p]*w[i-1]
z[i]=w[i-1]-para[p]*z[i-1]
}
Sc[p] = sum(w^2)
Sz[p]=sum(z^2)
Szw[p]=sum(z*w)
para[p+1] = para[p] + Szw[p]/Sz[p]
}
#round(cbind(iteration=0:(niter-1), thetahat=para[1:niter] , Sc , Sz ), 3)
abline(v=para[1:12], lty=2)
points(para[1:12], Sc[1:12], pch=16)
dev.off()
###########
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
set.seed(101010)
e = rexp(150, rate=.5); u = runif(150,-1,1); de = e*sign(u)
dex = 50 + arima.sim(n=100,list(ar=.95), innov=de, n.start=50)
plot.ts(dex, type='n', ylab=expression(X[~t]))
grid(lty=1, col=gray(.9))
lines(dex, type='o')
layout(matrix(c(1, 1, 2), ncol = 1))
par(mar=c(2.75,2.5,.5,.5), mgp=c(1.6,.6,0), cex.lab=1.1)
plot(gnp, ylab="Billions of Dollars",  type='n')
grid(lty=1, col=gray(.9)); lines(gnp)
acf(gnp, 48, panel.first=grid(lty=1))
rec.yw = ar.yw(rec, order=2)
rec.yw$x.mean # = 62.26 (mean estimate)
rec.yw$ar # = 1.33, -.44 (parameter estimates)
sqrt(diag(rec.yw$asy.var.coef)) # = .04, .04 (standard errors)
rec.yw$var.pred # = 94.80 (error variance estimate)
summary(rec.yw)
rec.yw
rec.pr = predict(rec.yw, n.ahead=24)
U = rec.pr$pred + rec.pr$se
L = rec.pr$pred - rec.pr$se
minx = min(rec,L); maxx = max(rec,U)
ts.plot(rec, rec.pr$pred, xlim=c(1980,1990), ylim=c(minx,maxx))
lines(rec.pr$pred, col="red", type="o")
lines(U, col="blue", lty="dashed")
lines(L, col="blue", lty="dashed")
par(mar=c(2.5,2.5,0,0)+.5, mgp=c(1.6,.6,0))
regr = ar.ols(rec, order=2, demean=FALSE, intercept=TRUE)
fore = predict(regr, n.ahead=24)
ts.plot(rec, fore$pred, col=1:2, xlim=c(1980,1990), ylab="Recruitment", type='n')
grid(lty=1); par(new=TRUE)
dev.off()
par(mar=c(2.5,2.5,0,0)+.5, mgp=c(1.6,.6,0))
regr = ar.ols(rec, order=2, demean=FALSE, intercept=TRUE)
fore = predict(regr, n.ahead=24)
ts.plot(rec, fore$pred, col=1:2, xlim=c(1980,1990), ylab="Recruitment", type='n')
grid(lty=1); par(new=TRUE)
ts.plot(rec, fore$pred, col=1:2, xlim=c(1980,1990), ylab="Recruitment")
U = fore$pred+fore$se
L = fore$pred-fore$se
xx = c(time(U), rev(time(U)))
yy = c(L, rev(U))
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.2))
lines(fore$pred, type="p", col=2)
dev.off()
rec.pr = predict(rec.yw, n.ahead=24)
U = rec.pr$pred + rec.pr$se
L = rec.pr$pred - rec.pr$se
minx = min(rec,L); maxx = max(rec,U)
ts.plot(rec, rec.pr$pred, xlim=c(1980,1990), ylim=c(minx,maxx))
grid(lty=1); par(new=TRUE)
lines(rec.pr$pred, col="red", type="o")
lines(U, col="blue", lty="dashed")
lines(L, col="blue", lty="dashed")
rec.pr = predict(rec.yw, n.ahead=24)
U = rec.pr$pred + rec.pr$se
L = rec.pr$pred - rec.pr$se
minx = min(rec,L); maxx = max(rec,U)
par(mar=c(2.5,2.5,0,0)+.5, mgp=c(1.6,.6,0))
ts.plot(rec, rec.pr$pred, xlim=c(1980,1990), ylim=c(minx,maxx))
grid(lty=1); par(new=TRUE)
lines(rec.pr$pred, col="red", type="o")
lines(U, col="blue", lty="dashed")
lines(L, col="blue", lty="dashed")
rec.mle = ar.mle(rec, order=2)
rec.mle$x.mean # 62.26
rec.mle$ar # 1.35, -.46
sqrt(diag(rec.mle$asy.var.coef)) # .04, .04 5 rec.mle$var.pred # 89.34
dev.off()
library('astsa')
source('grid.r')
rec.yw = ar.yw(rec, order=2)
rec.yw
rec.yw$x.mean # = 62.26 (mean estimate)
rec.yw$ar # parameter estimates
sqrt(diag(rec.yw$asy.var.coef)) # standard errors
rec.yw$var.pred # error variance estimate
rec.pr = predict(rec.yw, n.ahead=24)
U = rec.pr$pred + rec.pr$se
L = rec.pr$pred - rec.pr$se
minx = min(rec,L); maxx = max(rec,U)
par(mar=c(2.5,2.5,0,0)+.5, mgp=c(1.6,.6,0))
ts.plot(rec, rec.pr$pred, xlim=c(1980,1990), ylim=c(minx,maxx))
grid(lty=1); par(new=TRUE)
lines(rec.pr$pred, col="red", type="o")
lines(U, col="blue", lty="dashed")
lines(L, col="blue", lty="dashed")
rec.mle = ar.mle(rec, order=2)
rec.mle$x.mean
rec.mle$ar
sqrt(diag(rec.mle$asy.var.coef))
x.ima = HoltWinters(x, beta=FALSE, gamma=FALSE
)
x.ima
?HoltWinters
plot(x.ima)
summary(x.ima)
layout(matrix(c(1, 1, 2), ncol = 1))
par(mar=c(2.75,2.5,.5,.5), mgp=c(1.6,.6,0), cex.lab=1.1)
plot(gnp, ylab="Billions of Dollars",  type='n')
grid(lty=1, col=gray(.9)); lines(gnp)
acf(gnp, 48, panel.first=grid(lty=1))
par(mar=c(2.75,2.5,.5,.5), mgp=c(1.6,.6,0))
plot(diff(log(gnp)), ylab="GNP Growth Rate", type='n')
grid(lty=1, col=gray(.9)); lines(diff(log(gnp)))
abline(h=mean(diff(log(gnp))), col=4)
ACF = acf(diff(log(gnp)), 24, plot=FALSE)$acf[-1]
PACF = pacf(diff(log(gnp)), 24, plot=FALSE)$acf
num = length(gnp)-1
minA = min(ACF)
maxA = max(ACF)
minP = min(PACF)
maxP = max(PACF)
U = 2/sqrt(num)
L = -U
LAG = 1:24/4
minu = min(minA, minP, L) - 0.01
maxu = min(maxA + 0.2, maxP + 0.2, 1)
par(mfrow=c(2,1), mar=c(2,2.5,0,0)+.5, mgp=c(1.4,.6,0))
plot(LAG, ACF, type="h", xlab="LAG", ylim = c(minu, maxu), panel.first=grid(lty=1)); abline(h=0)
abline(h = c(L, U), col=4, lty=2)
plot(LAG, PACF, type="h", xlab="LAG",  ylim = c(minu, maxu) , panel.first=grid(lty=1)); abline(h=0)
abline(h = c(L, U), col=4, lty=2)
dev.off()
par(mfrow=c(2,1), mar=c(2.75,2.5,.5,.5), mgp=c(1.6,.6,0))
plot(diff(gnp), ylab="diff(GNP)", type='n')
grid(lty=1, col=gray(.9)); lines(diff(gnp))
abline(h=mean(diff(gnp)), col=4)
plot(diff(log(gnp)), ylab="GNP Growth Rate", type='n')
grid(lty=1, col=gray(.9)); lines(diff(log(gnp)))
abline(h=mean(diff(log(gnp))), col=4)
dev.off()
sarima(diff(log(gnp)), 0, 0, 2) # MA(2)
?sarima
sarima(diff(log(gnp)), 0, 0, 2) # MA(2)
par(mfrow=c(2,1), mar=c(2,2.5,.5,0)+.5, mgp=c(1.4,.6,0))
rs = resid(arima(log(varve), order=c(0,1,1)))
pval=c()
nlag=20
ppq=1
for (i in (ppq+1):nlag) {
u <- stats::Box.test(rs, i, type = "Ljung-Box")$statistic
pval[i] <- stats::pchisq(u, i - ppq, lower.tail = FALSE)
}
plot((ppq + 1):nlag, pval[(ppq + 1):nlag], xlab = "lag", cex.main=1, font.main=1,
ylab = "p value", ylim = c(0, 1), main = "p values for Ljung-Box statistic")
abline(h = 0.05, lty = 2, col = "blue")
rs = resid(arima(log(varve), order=c(1,1,1)))
pval=c()
nlag=20
ppq=2
for (i in (ppq+1):nlag) {
u <- stats::Box.test(rs, i, type = "Ljung-Box")$statistic
pval[i] <- stats::pchisq(u, i - ppq, lower.tail = FALSE)
}
plot((ppq + 1):nlag, pval[(ppq + 1):nlag], xlab = "lag",
ylab = "p value", ylim = c(0, 1), main = "")
abline(h = 0.05, lty = 2, col = "blue")
dev.off()
par(mar=c(2,2.5,.5,0)+.5, mgp=c(1.6,.6,0))
dat = read.table("uspop.dat")
y = dat[,2]
x = dat[,1]
b = dat[,3]
g = function(x) (
b[1]+b[2]*(x-1955)+b[3]*(x-1955)^2+b[4]*(x-1955)^3+b[5]*(x-1955)^4+b[6]*(x-1955)^5+b[7]*(x-1955)^6+b[8]*(x-1955)^7+b[9]*(x-1955)^8)/10^8
curve(g, 1910,2002, ylab="Population", xlab="Year", main="U.S. Population by Official Census", panel.first=grid(ny=NULL,lty=1), cex.main=1, font.main=1)
abline(v=c(1910,1930,1950,1970,1990), lty=1, col='lightgray')
points(x, y/10^8, pch=16)
mtext(expression(""%*% 10^8), side=2, line=1.5, adj=.95)
axis(1, seq(1910,1990,by=10), labels=FALSE)
par(mfrow=c(2,1), mar=c(2.5,2.5,0,0)+.5, mgp=c(1.5,.6,0))
trend = time(cmort); temp = tempr - mean(tempr); temp2 = temp^2
fit <- lm(cmort~trend + temp + temp2 + part, na.action=NULL)
ACF = acf(resid(fit), 52, plot=FALSE)$acf[-1]
PACF = pacf(resid(fit), 52, plot=FALSE)$acf
num = length(cmort)
minA = min(ACF)
maxA = max(ACF)
minP = min(PACF)
maxP = max(PACF)
U = 2/sqrt(num)
L = -U
LAG = 1:52/52
minu = min(minA, minP, L) - 0.01
maxu = min(maxA + 0.2, maxP + 0.2, 1)
plot(LAG, ACF, type="h", ylim = c(minu, maxu), panel.first=grid(lty=1)); abline(h=0)
abline(h = c(L, U), col=4, lty=2)
plot(LAG, PACF, type="h", ylim = c(minu, maxu) , panel.first=grid(lty=1)); abline(h=0)
abline(h = c(L, U), col=4, lty=2)
sarima(gnpgr, 1, 0, 0) # AR(1)
gnpgr=diff(log(gnp))
sarima(gnpgr, 1, 0, 0) # AR(1)
sarima(gnpgr, 0, 0, 2) # MA(2)
library('astsa')
source('grid.r')
x1 = 2*cos(2*pi*1:100*6/100) + 3*sin(2*pi*1:100*6/100)
x2 = 4*cos(2*pi*1:100*10/100) + 5*sin(2*pi*1:100*10/100)
x3 = 6*cos(2*pi*1:100*40/100) + 7*sin(2*pi*1:100*40/100)
x = x1 + x2 + x3
par(mfrow = c(2,2), mar=c(2,2,1,0)+.5, mgp=c(1.6,.6,0))
plot.ts(x1, ylim=c(-10,10), main=expression(omega==6/100~~~A^2==13),  panel.first=grid(lty=1))
plot.ts(x2, ylim=c(-10,10), main=expression(omega==10/100~~~A^2==41),  panel.first=grid(lty=1))
plot.ts(x3, ylim=c(-10,10), main=expression(omega==40/100~~~A^2==85),  panel.first=grid(lty=1))
plot.ts(x,  ylim=c(-16,16), main="sum",  panel.first=grid(lty=1), font.main=1)
par(mar=c(2,2.5,1,0)+.5, mgp=c(1.6,.6,0))
P = Mod(2*fft(x)/100)^2;  Fr = 0:99/100
plot(Fr, P, type="o", xlab="frequency", ylab="scaled periodogram", panel.first=grid(lty=1), ylim=c(0,90) )
abline(v=.5, lty=2, col=4)
abline(v=c(.1,.3,.7,.9), lty=1, col='lightgray')
?fft
par(mar=c(2,2.5,1,0)+.5, mgp=c(1.6,.6,0))
P = Mod(2*fft(x)/100)^2;  Fr = 0:99/100
plot(Fr, P, type="o", xlab="frequency", ylab="scaled periodogram", panel.first=grid(lty=1), ylim=c(0,90) )
abline(v=.5, lty=2, col=4)
abline(v=c(.1,.3,.7,.9), lty=1, col='lightgray')
dev.off()
library('astsa')
source('grid.r')
x1 = 2*cos(2*pi*1:100*6/100) + 3*sin(2*pi*1:100*6/100)
x2 = 4*cos(2*pi*1:100*10/100) + 5*sin(2*pi*1:100*10/100)
x3 = 6*cos(2*pi*1:100*40/100) + 7*sin(2*pi*1:100*40/100)
x = x1 + x2 + x3
par(mfrow = c(2,2), mar=c(2,2,1,0)+.5, mgp=c(1.6,.6,0))
plot.ts(x1, ylim=c(-10,10), main=expression(omega==6/100~~~A^2==13),  panel.first=grid(lty=1))
plot.ts(x2, ylim=c(-10,10), main=expression(omega==10/100~~~A^2==41),  panel.first=grid(lty=1))
plot.ts(x3, ylim=c(-10,10), main=expression(omega==40/100~~~A^2==85),  panel.first=grid(lty=1))
plot.ts(x,  ylim=c(-16,16), main="sum",  panel.first=grid(lty=1), font.main=1)
dev.off()
par(mar=c(2,2.5,1,0)+.5, mgp=c(1.6,.6,0))
P = Mod(2*fft(x)/100)^2;  Fr = 0:99/100
par(mar=c(2,2.5,1,0)+.5, mgp=c(1.6,.6,0))
P = Mod(2*fft(x)/100)^2;  Fr = 0:99/100
plot(Fr, P, type="o", xlab="frequency", ylab="scaled periodogram", panel.first=grid(lty=1), ylim=c(0,90) )
abline(v=.5, lty=2, col=4)
abline(v=c(.1,.3,.7,.9), lty=1, col='lightgray')
n = length(star)
layout(matrix(c(1,2), ncol = 1), height=c(1.25,1))
par( mar=c(2,2,0,0)+.5, mgp=c(1.6,.6,0))
plot(star, ylab="star magnitude", xlab="day", type='n' )
library('astsa')
source('grid.r')
n = length(star)
layout(matrix(c(1,2), ncol = 1), height=c(1.25,1))
par( mar=c(2,2,0,0)+.5, mgp=c(1.6,.6,0))
plot(star, ylab="star magnitude", xlab="day", type='n' )
grid(lty=1); lines(star)
Per = Mod(fft(star-mean(star)))^2/n
Freq = (1:n -1)/n
plot(Freq[1:50], Per[1:50], type='n', ylab="Periodogram", xlab="Frequency")
grid(); lines(Freq[1:50], Per[1:50], type='h', lwd=3)
text(.05, 7000, "24 day cycle"); text(.027, 9000, "29 day cycle")
dev.off()
par(mfrow=c(3,1), mar=c(3,3,1.5,1), mgp=c(1.6,.6,0), cex.main=1.1)
arma.spec(log="no", main="White Noise")
arma.spec(ma=.5, log="no", main="Moving Average")
arma.spec(ar=c(1,-.9), log="no", main="Autoregression")
par(mfrow=c(3,1), mar=c(3,3,1.5,1), mgp=c(1.6,.6,0), cex.main=1.1)
arma.spec(log="no", main="White Noise")
arma.spec(ma=.5, log="no", main="Moving Average")
arma.spec(ar=c(1,-.9), log="no", main="Autoregression")
par(mfrow=c(2,1), mar=c(3.5,3,2.5,1),  mgp=c(1.5,.6,0), oma=rep(0,4), font.main=1)
soi.per = mvspec(soi, log="no", type='n')
grid(lty=1); par(new=TRUE)
mvspec(soi, log="no")
abline(v=1/4, lty=2, col=8)
mtext('1/4',side=1, line=0, at=.25, cex=.75)
rec.per = mvspec(rec, log="no", type='n')
grid(lty=1); par(new=TRUE)
mvspec(rec, log="no")
abline(v=1/4, lty=2, col=8)
mtext('1/4',side=1, line=0, at=.25, cex=.75)
par(mar=c(2,2,0,0)+.5, mgp=c(1.5,.6,0))
u=arma.spec(ar=c(1,-.9), xlim=c(.15,.151), ylim=c(10, 100), n.freq=100000, col='white')
grid(lty=1, equilogs = FALSE )
lines(u$freq,u$spec, lwd=2)
dev.off()
nan=read.csv('midterm.xlsx')
head(nan)
nan=read.csv('midterm.csv')
nan
nan=read.csv('midterm.csv',header=F)
nan
score=nan[,2]
score
plot(density(score))
summary(score)
library('astsa')
source('grid.r')
dim(salt)
class(salt)
head(salt)
length(salt)
plot(salt)
head(saltemp)
plot(saltemp)
?salt
?nextn
nextn(64)
?spec.pgram
salt.per = spec.pgram(salt, taper=0, log="no")
salt.per
par(mfrow=c(2,1))
soi.per = spec.pgram(soi, taper=0, log="no")
abline(v=1/4, lty="dotted")
rec.per = spec.pgram(rec, taper=0, log="no")
abline(v=1/4, lty="dotted")
par(mfrow=c(1,2))
soi.per = spec.pgram(soi, taper=0, log="no")
abline(v=1/4, lty="dotted")
rec.per = spec.pgram(rec, taper=0, log="no")
abline(v=1/4, lty="dotted")
summary(soi)
length(soi)
class(soi)
1/12
plot(soi)
dev.off()
plot.ts(salt)
s = salt
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
summary(s.per)
s.per
s.per[4]
interval_upper = 2*tmp/U
tmp = s.per$spec[4]
interval_upper = 2*tmp/U
interval_lower = 2*tmp/L
interval_lower
interval_upper
s.per$spec
plot(s.per$spec)
which(s.per$spec==max(s.per$spec))
s.per
s.per$freq[4]
625/10000
625/25
10000/25
400/25
length(s.per$spec)
?period
salt
c(salt,1)
class(c(salt,1))
plot(salt)
length(salt)
fft(salt)
plot(fft(salt))
?Mod
Fr
P = Mod(2*fft(salt)/100)^2
Fr = 0:99/100
plot(Fr, P, type="o", xlab="frequency", ylab="scaled periodogram", panel.first=grid(lty=1), ylim=c(0,90) )
length(y)
length(P)
P = Mod(2*fft(salt)/100)^2
Fr = 0:63/64
plot(Fr, P, type="o", xlab="frequency", ylab="scaled periodogram", panel.first=grid(lty=1), ylim=c(0,90) )
?spec.gram
?spec.pgram
ts(salt)
?ts
is.ts(salt)
plot(soi)
ts(soi)
nextn(453)
?nextn
salt.new=c(salt,rep(0,8))
salt.new
s=salt.new
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
tmp = s.per$spec[4]
interval_upper = 2*tmp/U
interval_lower = 2*tmp/L
print(tmp)
salt
s=c(salt,salt[11,18])
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
tmp = s.per$spec[4]
s=c(salt,salt[11:18])
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
which(s.per==max(s.per))
which(s.per$spec==max(s.per$spec))
salt.new=c(salt,rep(0,8))
s=salt.new
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
which(s.per$spec==max(s.per$spec))
tmp = s.per$spec[4]
interval_upper = 2*tmp/U
interval_lower = 2*tmp/L
print(tmp)
salt.new=c(salt,rep(mean(salt),8))
s=salt.new
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
which(s.per$spec==max(s.per$spec))
tmp = s.per$spec[4]
interval_upper = 2*tmp/U
interval_lower = 2*tmp/L
print(tmp)
s=c(saltemp,rep(mean(saltemp),8))
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
which(s.per$spec==max(s.per$spec))
tmp = s.per$spec[4]
tmp
s = salt
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
which(s.per$spec==max(s.per$spec))
tmp = s.per$spec[4]
tmp
s=salt-mean(salt)
s.per = spec.pgram(s,taper=0,log='no')
U = qchisq(.025,2)
L = qchisq(.975,2)
which(s.per$spec==max(s.per$spec))
tmp = s.per$spec[4]
tmp
plot(soi)
plot(ts(soi,frequency = 1/12))
