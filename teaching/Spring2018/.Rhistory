library('astsa')
source('grid.r')  # I changed the defaults so that
source('grid.r')  # I changed the defaults so that
################
pdf(file="jj.pdf", width=7.5,height=3.25)
dev.off()
#################
# Mar 8, 2018
################
# Example 1.1 Johnson & Johnson Quarterly Earnings
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
plot(jj, ylab="Quarterly Earnings per Share", type='n')
grid(lty=1)
lines(jj, type="o")
library('astsa')
library('astsa')
source('grid.r')
###################
# Mar 2, 2017
###################
################
# Johnson & Johnson Quarterly Earnings
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
###################
# Mar 8, 2018
###################
################
# Johnson & Johnson Quarterly Earnings
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
plot(jj, ylab="Quarterly Earnings per Share",   type='n')
grid(lty=1)
lines(jj, type="o")
dev.off()
###########
# Global Warming
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
plot(globtemp, ylab="Global Temperature Deviations",    type='n')
grid(lty=1); lines(globtemp, type='o')
plot(gtemp, type='n')
grid(lty=1); lines(gtemp, type='o')
data(astsa)
summary(astsa)
###########
# Speech
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
plot(speech,   type='n', ylab='speech')
grid(lty=1);   lines(speech);
###########
# New York Stock Exchange
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
plot(nyse,   type='n', ylab='NYSE Returns')
grid(lty=1);   lines(nyse);
tsplot(jj, type="o", ylab="Quarterly Earnings per Share")
tsplot(globtemp, type="o", ylab="Global Temperature Deviations")
?tsplot
###########
# Speech
tsplot(speech)
###########
## djia is in astsa version 1.5+ - this is where it came from
# library(TTR)                            # install it first
# djia  = getYahooData("^DJI", start=20060420, end=20160420, freq="daily")
library(xts)                              # if don't use TTR
install.packages("xts")
install.packages("TTR")
library(astsa)
###################
# Mar 8, 2018
###################
################
# Johnson & Johnson Quarterly Earnings
tsplot(jj, type="o", ylab="Quarterly Earnings per Share")
dev.off()
###########
# Global Warming
tsplot(globtemp, type="o", ylab="Global Temperature Deviations")
dev.off()
###########
# Speech
tsplot(speech)
dev.off()
###########
# DowJonesIndustrialAverage
library(TTR)
djia = getYahooData("^DJI", start=20060420, end=20160420, freq="daily")
library(xts)                              # if don't use TTR
djiar = diff(log(djia$Close))[-1]         # approximate returns
plot(djiar, main="DJIA Returns", type="n")
lines(djiar)
?getYahooData
head(djia)
?getSymbols
install.packages("quantmod")
###########
# Dow Jones Industrial Average
library(quantmod)
?getSymbols
djia = getSymbols("^DJI", start=20060420, end=20160420, freq="daily")
head(djia)
###########
# Dow Jones Industrial Average
library(quantmod)
djia = getSymbols("^DJI", from="2006-04-20", to="2016-04-20", periodicity="daily")
library(xts)                              # if don't use TTR
djiar = diff(log(djia$Close))[-1]         # approximate returns
head(djia)
djia
djia$Close
getSymbols('MSFT',src='yahoo')
DJI
djia = getSymbols("DJI", from="2006-04-20", to="2016-04-20", periodicity="daily")
###########
# Dow Jones Industrial Average
library(quantmod)
getSymbols("^DJI", from="2006-04-20", to="2016-04-20", periodicity="daily")
djia = DJI
head(djia)
library(xts)                              # if don't use TTR
djiar = diff(log(djia$Close))[-1]         # approximate returns
djiar = diff(log(djia$DJI.Close))[-1]         # approximate returns
plot(djiar, main="DJIA Returns", type="n")
lines(djiar)
###########
# New York Stock Exchange
par(mar=c(3,3,1,1), mgp=c(1.6,.6,0))
plot(nyse,   type='n', ylab='NYSE Returns')
grid(lty=1);   lines(nyse);
tsplot(nyse,   type='o', ylab='NYSE Returns')
tsplot(nyse, ylab='NYSE Returns')
#########
# SOI and Fish
par(mfrow = c(2,1))  # set up the graphics
tsplot(soi, ylab="", main="Southern Oscillation Index")
tsplot(rec, ylab="", main="Recruitment")
#########
# fMRI
par(mfrow=c(2,1), mar=c(3,2,1,0)+.5, mgp=c(1.6,.6,0))
ts.plot(fmri1[,2:5], col=1:4, ylab="BOLD", xlab="", main="Cortex")
ts.plot(fmri1[,6:9], col=1:4, ylab="BOLD", xlab="", main="Thalamus & Cerebellum")
mtext("Time (1 pt = 2 sec)", side=1, line=2)
#####################
# Earthquakes and Explosions
par(mfrow=c(2,1))
tsplot(EQ5, main="Earthquake")
tsplot(EXP6, main="Explosion")
####################
# Example 1.9 white noise and moving average
w = rnorm(500,0,1)  # 500 N(0,1) variates
v = filter(w, sides=2, rep(1/3,3))  # moving average
par(mfrow=c(2,1))
tsplot(w, main="white noise")
tsplot(v, ylim=c(-3,3), main="moving average")
# now try this (not in text):
dev.new()  # open a new graphic device
ts.plot(w, v, lty=2:1, col=1:2, lwd=1:2)
?tsplot
?filter
ts.plot(w, v, lty=2:1, col=1:2, lwd=1:2)
####################
# Example 1.10 Autoregression
w = rnorm(550,0,1)  # 50 extra to avoid startup problems
x = filter(w, filter=c(1,-.9), method="recursive")[-(1:50)]
tsplot(x, main="autoregression")
# now try this (not in text):
# dev.new()  # open a new graphic device
# ts.plot(w, v, lty=2:1, col=1:2, lwd=1:2)
dev.off()
####################
# Example 1.10 Autoregression
w = rnorm(550,0,1)  # 50 extra to avoid startup problems
x = filter(w, filter=c(1,-.9), method="recursive")[-(1:50)]
tsplot(x, main="autoregression")
head(w)
head(x)
dim(w)
length(w)
length(x)
nan=filter(w, filter=c(1,-.9), method="recursive")
length(nan)
head(w)
head(nan)
w[1]+w[2]
#################
# Example 1.11 RW with Drift
set.seed(154) # so you can reproduce the results
w = rnorm(200); x = cumsum(w) # two commands in one line
wd = w +.2;    xd = cumsum(wd)
tsplot(xd, ylim=c(-5,55), main="random walk", ylab='')
lines(x, col=4)
abline(h=0, col=4, lty=2)
abline(a=0, b=.2, lty=2)
####################
# Example 1.12 Signal in Noise
cs = 2*cos(2*pi*(1:500)/50 + .6*pi)
w = rnorm(500,0,1)
par(mfrow=c(3,1), mar=c(3,2,2,1), cex.main=1.5)
tsplot(cs, ylab="", main = expression(x[t]==2*cos(2*pi*t/50+.6*pi)))
tsplot(cs + w, ylab="", main = expression(x[t]==2*cos(2*pi*t/50+.6*pi)+N(0,1)))
tsplot(cs + 5*w, ylab="", main = expression(x[t]==2*cos(2*pi*t/50+.6*pi)+N(0,25)))
